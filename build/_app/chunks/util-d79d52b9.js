const a={topic_facet:"topic",genre_facet:"genre"},e={1900:"1900-",1910:"1910-",1920:"1920-",1930:"1930-",1940:"1940-",1950:"1950-",1960:"1960-",1970:"1970-",1980:"1980-",1990:"1990-",2e3:"2000-"},t=a=>e[a],s=(e,t)=>`/browse?facet=${a[e]}:${encodeURIComponent(t).replace(/äöööö/g,"+")}`,o="Elävät kuvat",r="suomalaisia lyhytelokuvia",c=[2e3,1990,1980,1970,1960,1950,1940,1930,1920,1910,1900],n=async a=>{const e=a.map((a=>a.then((a=>({status:"fulfilled",value:a}))).catch((a=>({status:"rejected",reason:a})))));return(await Promise.all(e)).map((a=>"fulfilled"===a.status?a.value:[]))},l={cf:{cacheTtl:10800,cacheEverything:!0}},i=(a,e,t)=>new Promise((async(s,o)=>{const r=await a(t,l);if(r.ok){const a=await r.json();s(void 0===a.facets?[]:((a=[])=>a.map((a=>{const{value:e,translated:t}=a;return{value:e,translated:t}})))(a.facets[`${e}_facet`]).map((a=>a.value)).filter((a=>a!==e)))}o("error topics")})),u=(a,e)=>new Promise((async(t,s)=>{const o=await a(e,l);if(o.ok){const a=await o.json();t({records:f(a.records||[]),resultCount:a.resultCount})}s("error random clips")})),f=a=>a.filter((a=>a.images.length>0&&a.urls&&a.urls.find((a=>void 0!==a.videoSources))));export{o as a,r as b,i as c,c as d,f as e,s as f,n as l,u as s,t as y};
